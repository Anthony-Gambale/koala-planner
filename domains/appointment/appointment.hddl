(define (domain appointment)
    (:requirements :typing :hierarchy)
    (:types
        client
    )
    (:predicates
        (needs_followup ?c - client)
    )

    ;; tasks

    (:task schedule_next_day)

    ;; methods

    (:method aaa ;; m_schedule_next_day_0
        :parameters ()
        :task (schedule_next_day)
        :subtasks (and
            (task0 (reuse_todays_schedule))
        )
    )

    (:method bbb ;; m_schedule_next_day_1
        :parameters ()
        :task (schedule_next_day)
        :subtasks (and
            (task0 (skip_scheduling))
        )
    )

    ;; actions

    (:action conduct_appointment
        :parameters (?c - client)
        :precondition ()
        :effect (oneof (needs_followup ?c) ())
    )

    (:action reuse_todays_schedule
        :parameters ()
        :precondition (forall (?c - client) (needs_followup ?c))
        :effect ()
    )

    (:action skip_scheduling
        :parameters ()
        :precondition (forall (?c - client) (not (needs_followup ?c)))
        :effect ()
    )
)
