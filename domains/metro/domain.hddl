(define (domain metro)
    (:requirements :typing :hierarchy)
    (:types
        station
    )
    (:predicates
        (everybody_boarded ?s - station)
    )

    ;; tasks

    (:task visit :parameters (?s - station))

    ;; methods

    (:method m_visit_0
        :parameters (?s - station)
        :task (visit ?s)
        :subtasks (and
            (task0 (arrive ?s))
            (task1 (leave ?s))
        )
        :ordering (and
            (< task0 task1)
        )
    )

    (:method m_visit_1
        :parameters (?s - station)
        :task (visit ?s)
        :subtasks (and
            (task0 (arrive ?s))
            (task1 (leave ?s))
            (task2 (wait ?s))
        )
        :ordering (and
            (< task0 task1)
            (< task0 task2)
        )
    )

    ;; actions

    (:action arrive
        :parameters (?s - station)
        :precondition ()
        :effect (oneof
            (everybody_boarded ?s)
            (not (everybody_boarded ?s))
        )
    )

    (:action leave
        :parameters (?s - station)
        :precondition (everybody_boarded ?s)
        :effect ()
    )

    (:action wait
        :parameters (?s - station)
        :precondition ()
        :effect (everybody_boarded ?s)
    )
)
